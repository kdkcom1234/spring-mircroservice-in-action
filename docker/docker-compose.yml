version: '3.7'
services:
  database:
    image: postgres:latest
    hostname: database
    ports:
      - "15432:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB:       "ostock_dev"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./data.sql:/docker-entrypoint-initdb.d/2-data.sql
    networks:
      - backend
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
  configserver:
    image: ostock/config-server:latest
    hostname: configserver
    ports:
      - "8071:8071"
    networks:
      - backend
  eurekaserver:
    image: ostock/eureka-server:latest
    hostname: eurekaserver
    ports:
      - "8070:8070"
    environment:
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8071"
    depends_on:
      configserver:
        condition: service_started
    networks:
      - backend
  licensingservice:
    image: ostock/licensing-service:latest
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8071"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    ports:
      - "8080:8080"
    networks:
      - backend
  organizationservice:
    image: ostock/organization-service:latest
    environment:
      - "SPRING_PROFILES_ACTIVE=dev"
      - "SPRING_CONFIG_IMPORT=optional:configserver:http://configserver:8071"
    depends_on:
      database:
        condition: service_healthy
      configserver:
        condition: service_started
      eurekaserver:
        condition: service_started
    ports:
      - "8081:8081"
    networks:
      - backend

networks:
  backend:
    driver: bridge